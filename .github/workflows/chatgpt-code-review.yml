name: ChatGPT Inline Review with Context

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Dependencies
      run: |
        npm install openai @octokit/rest@18.12.0

    - name: Fetch PR Diff
      id: get_diff
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }}
        git diff origin/${{ github.event.pull_request.base.ref }} > pr_diff.txt

    - name: Run ChatGPT Review
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cat <<'EOF' > review.js
        const fs = require('fs');
        const { OpenAI } = require('openai');
        const { Octokit } = require('@octokit/rest');

        const openai = new OpenAI({
          apiKey: process.env.OPENAI_API_KEY,
        });

        const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

        async function parseDiffAndReview() {
          try {
            const diff = fs.readFileSync('pr_diff.txt', 'utf8');
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const pull_number = parseInt(process.env.GITHUB_REF_NAME.split('/')[2], 10);
            const commit_id = process.env.GITHUB_SHA;

            // Parse the diff
            const changes = diff.split('@@').slice(1).map(change => {
              const [header, ...lines] = change.split('\n');
              const match = header.match(/\\-(\\d+),(\\d+) \\+(\\d+),(\\d+)/); // Match line ranges
              const removedStart = match ? parseInt(match[1], 10) : null;
              const addedStart = match ? parseInt(match[3], 10) : null;

              const removedLines = lines.filter(line => line.startsWith('-')).map(line => line.slice(1));
              const addedLines = lines.filter(line => line.startsWith('+')).map(line => line.slice(1));

              const filePathMatch = diff.match(/a\\/([\\w\\d_./]+)/);
              const filePath = filePathMatch ? filePathMatch[1] : null;

              return { filePath, removedStart, addedStart, removedLines, addedLines };
            });

            console.log('Parsed changes:', changes);

            for (const { filePath, removedLines, addedLines, addedStart } of changes) {
              if (!filePath) continue;

              const prompt = `
                Review the following change in the file \`${filePath}\`:
                Removed lines:
                ${removedLines.join('\n')}
                Added lines:
                ${addedLines.join('\n')}

                Provide feedback ensuring the added lines align with the removed lines and the overall code logic.
              `;

              console.log('Generated prompt:', prompt);

              const response = await openai.chat.completions.create({
                model: 'gpt-4',
                messages: [{ role: 'user', content: prompt }],
                max_tokens: 500,
              });

              const feedback = response.data.choices[0].message.content;

              console.log('Posting inline comment:', {
                filePath,
                addedStart,
                feedback,
              });

              // Post the comment for the first added line
              await octokit.pulls.createReviewComment({
                owner,
                repo,
                pull_number,
                body: feedback,
                commit_id,
                path: filePath,
                line: addedStart,
              });
            }
          } catch (error) {
            console.error('Error during ChatGPT review:', error.message || error);
            process.exit(1);
          }
        }

        parseDiffAndReview();
        EOF

        node review.js
