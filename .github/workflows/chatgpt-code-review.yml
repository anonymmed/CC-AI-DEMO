name: ChatGPT Code Review with Inline Comments

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Ensure compatibility with the OpenAI library

    - name: Install Dependencies
      run: |
        npm install openai @octokit/rest@18.12.0

    - name: Fetch PR Diff
      id: get_diff
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }}
        git diff origin/${{ github.event.pull_request.base.ref }} > pr_diff.txt

    - name: Run ChatGPT Review
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create the review script
        echo "const fs = require('fs');
        const { OpenAI } = require('openai');
        const { Octokit } = require('@octokit/rest');

        const openai = new OpenAI({
          apiKey: process.env.OPENAI_API_KEY,
        });

        const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

        async function reviewCode() {
          try {
            const diff = fs.readFileSync('pr_diff.txt', 'utf8');
            const rules = fs.readFileSync('rules.md', 'utf8');
            const prompt = \`
              Review the following Pull Request diff against the rules below:
              Rules:
              \${rules}
              Diff:
              \${diff}
              Provide a summary of violations and suggestions for improvements, and indicate the relevant line numbers.
            \`;
            const response = await openai.chat.completions.create({
              model: 'gpt-4',
              messages: [{ role: 'user', content: prompt }],
              max_tokens: 1000,
            });

            const feedback = response.choices[0].message.content;
            console.log('ChatGPT Review Response:');
            console.log(feedback);

            // Parse feedback for inline comments (dummy logic for now)
            const comments = feedback.split('\\n').map((line, index) => ({
              body: line,
              line: index + 1, // Replace this with actual line parsing logic
              path: 'file.txt', // Replace with actual file path from diff
            }));

            for (const comment of comments) {
              console.log(\`Posting comment: \${comment.body}\`);
              await octokit.pulls.createReviewComment({
                owner: process.env.GITHUB_REPOSITORY.split('/')[0],
                repo: process.env.GITHUB_REPOSITORY.split('/')[1],
                pull_number: parseInt(process.env.GITHUB_REF_NAME.split('/')[2], 10),
                body: comment.body,
                commit_id: process.env.GITHUB_SHA,
                path: comment.path,
                line: comment.line,
              });
            }
          } catch (error) {
            console.error('Error during ChatGPT review:', error.message || error);
            process.exit(1);
          }
        }

        reviewCode();" > review.js

        # Run the review script
        node review.js
